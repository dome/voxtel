<?php

function vexcel_menu() {
  $items = array();

/* TODO
   Non menu code that was placed in hook_menu under the '!$may_cache' block
   so that it could be run during initialization, should now be moved to hook_init.
   Previously we called hook_init twice, once early in the bootstrap process, second
   just after the bootstrap has finished. The first instance is now called boot
   instead of init.
   
   In Drupal 6, there are now two hooks that can be used by modules to execute code
   at the beginning of a page request. hook_boot() replaces hook_boot() in Drupal 5
   and runs on each page request, even for cached pages. hook_boot() now only runs
   for non-cached pages and thus can be used for code that was previously placed in
   hook_menu() with $may_cache = FALSE:
   
   Dynamic menu items under a '!$may_cache' block can often be simplified
   to remove references to arg(n) and use of '%<function-name>' to check
   conditions. See http://drupal.org/node/103114.
   
   The title and description arguments should not have strings wrapped in t(),
   because translation of these happen in a later stage in the menu system.
*/


    $items['weos/excel'] = array(
      'description' => 'Export.', 'title' => 'Export',
      'page callback' => 'vexcel_overview',
      'weight' => -1,
      'access arguments' => array('access rate'),
      'type' => MENU_CALLBACK);
      
  return $items;
}

function vexcel_overview() {
$sqlstr = $_SESSION['sqlstr'];
$filename = $_SESSION['filename'];
//echo "hello";
//echo $sqlstr;
//exit;
if (! $sqlstr){

print theme('page','Data not found');

}else {
//module_load_include('hp' ', 'vexcel', '');
require_once('Spreadsheet/Excel/Writer.php' );
ob_end_clean();
$workbook = new Spreadsheet_Excel_Writer();
$worksheet = & $workbook->addWorksheet("Sheet1");
$tel_format = & $workbook->addFormat();
         $result = db_query($sqlstr);
	 $row = db_fetch_array($result);
	 $a = array();
	 $i = 0;
	 $field = array_keys($row);
	      foreach($field as $value){
	        if($value == $key){
		    $curkey++;
		    continue;
		};
		 //echo $value."\t";
		 $worksheet->writestring(0,$i, $value);
		 $i++;
		 $a[] = $value;
	      };
	 $cc = count($a);
         $result = db_query($sqlstr);
	 $j = 1;
	 while ($data = db_fetch_object($result)){
	   for ($i=0; $i<count($a); $i++) {
	     $value = @iconv('utf8','tis620',$data->$a[$i]);
	     $worksheet->writestring($j,$i, $value);
	    //echo $value."\t";
	   }
	    //echo "\n";
	    $j++;
	 };
$workbook->send($filename);
$workbook->close();

}
};
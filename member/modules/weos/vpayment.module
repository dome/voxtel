<?php

/**
 * Implementation of hook_menu().
 */
function vpayment_menu() {
    $items['payment'] = array(
      'description' => 'View payment.', 'title' => 'Payment',
      'menu_name' => 'features',
      'page callback' => 'vpayment_overview',
      'weight' => -6,
      'access arguments' => array('access rate'),
    'type' => MENU_NORMAL_ITEM,
    );

    $items['payment/list'] = array(
      'description' => 'View payment.', 'title' => 'List',
      'page callback' => 'vpayment_overview',
      'menu_name' => 'features',
      'weight' => -1,
      'access arguments' => array('access rate'),
      'type' => MENU_DEFAULT_LOCAL_TASK
    );
    $items['payment/edit'] = array(
      'title' => 'Edit Card',
      'menu_name' => 'features',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('vpayment_form'),
      'access arguments' => array('access rate'),
      'type' => MENU_CALLBACK);
    $items['payment/delete'] = array(
      'title' => 'Delete bookmarks',
      'menu_name' => 'features',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('vpayment_lot_delete_confirm'),
      'access arguments' => array('access rate'),
      'type' => MENU_CALLBACK);
    $items['payment/add'] = array(
      'title' => 'Pay Back',
      'menu_name' => 'features',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('vpayment_form'),
      'access arguments' => array('access rate'),
      'type' => MENU_LOCAL_TASK);

    return $items;
}

/**
 * Implementation of hook_cron().
 *
 * Remove expired log messages and flood control events.
 */
function vpayment_cron() {
    //  db_query('DELETE FROM {watchdog} WHERE timestamp < %d', time() - variable_get('watchdog_clear', 604800));
    //  db_query('DELETE FROM {flood} WHERE timestamp < %d', time() - 3600);
}

/**
 * Implementation of hook_user().
 */
function vpayment_user($op, &$edit, &$user) {

}

function iif($condion, $true, $false ) {
    return ($condition ? $true : $false);
}

function vpayment_form_overview() {

    if (empty($_SESSION['vpayment_search_filter'])) {
        $_SESSION['vpayment_search_filter'] = '';
    }

    $form['search'] = array(
    '#type' => 'textfield',
    '#title' => 'Search',
    '#size' => 20,
    '#default_value' => $_SESSION['vpayment_search_filter']
    );

    $form['submit'] = array('#type' => 'submit', '#value' =>t('Filter'));
    //  $form['#redirect'] = FALSE;

    return $form;
}
/**
 * Menu callback; displays a listing of log messages.
 */
function vpayment_overview() {
    $header = array(
        array('data' => t('Date'), 'field' => 'date', 'sort' => 'desc'),
        array('data' => t('Username'), 'field' => 'name'),
        array('data' => t('Amount')),
        array('data' => t('Ref')),
        array('data' => t('Type')),
        array('data' => t('Operations'))
    );
    $output = drupal_get_form('vpayment_form_overview');

    $tablesort = tablesort_sql($header);
    $search_str = $_SESSION['vpayment_search_filter'];
    $sql = "SELECT *,fdate1(date) as cdate,
          CASE
                  WHEN voippayment.paid > 0::numeric THEN to_number(voippayment.paid::text, '9999999.99'::text)
                          ELSE 0::numeric - to_number(voippayment.paid_out::text, '9999999.99'::text)
                          END AS paid, voippayment.date
                         FROM voippayment ";
    //  $sql="Select username,duration As paid,tariffdesc As ref from voipcall";
    if ($search_str != '') {
        $sql .= "  Where username LIKE '$search_str%' Or ref Like '$search_str%'";
    }else
    $sql .= " ";

    //echo $sql;
    $tablesort = tablesort_sql($header);
    $result = pager_query($sql . $tablesort, 50);


    while ($rate = db_fetch_object($result)) {
        $rows[] =
        array(
            // Cells
            $rate->cdate,
            $rate->name,
            $rate->paid/100,
            $rate->ref,
//            iif($rate->ptype=='1','Card topup',''),
            ($rate->ptype=="1" ? "card topup" : ""),
//            $rate->ptype,
    '',
        );
    }

    if (!$rows) {
        $rows[] = array(array('data' => t('Data Not Found.'), 'colspan' => 20));
    }

    $output .= theme('table', $header, $rows);
    $output .= theme('pager', NULL, 50, 0);

    return $output;
}

/**
 * Menu callback; generic function to display a page of the most frequent
 * watchdog events of a specified type.
 */
function vpayment_top($type) {

    $header = array(
        array('data' => t('Count'), 'field' => 'count', 'sort' => 'desc'),
        array('data' => t('Message'), 'field' => 'message')
    );

    $result = pager_query("SELECT COUNT(wid) AS count, message FROM {watchdog} WHERE type = '%s' GROUP BY message ". tablesort_sql($header), 30, 0, "SELECT COUNT(DISTINCT(message)) FROM {watchdog} WHERE type = '%s'", $type);

    while ($watchdog = db_fetch_object($result)) {
        $rows[] = array($watchdog->count, truncate_utf8($watchdog->message, 56, TRUE, TRUE));
    }

    if (!$rows) {
        $rows[] = array(array('data' => t('Data Not Found.'), 'colspan' => 2));
    }

    $output  = theme('table', $header, $rows);
    $output .= theme('pager', NULL, 30, 0);

    return $output;
}


function vpayment_form_overview_submit($form, &$form_state) {
    $_SESSION['vpayment_search_filter'] = $form_state['values']['search'];
}


function _vpayment_get_vpayment_group() {
    $types = array();

    $result = db_query('SELECT DISTINCT(description),id FROM voiptariffgrp ORDER BY description');
    while ($object = db_fetch_object($result)) {
        $types[] = array($object->id => $object->description);
    }

    return $types;
}


function vpayment_form($form_state = array(),$id = NULL) {

    drupal_set_message("Please use transfer menu!.");
    return drupal_goto('dashboard/transfer/'.$id);

    $form['username'] = array(
    '#type' => 'textfield',
    '#title' => t("Username/Number"),
    '#default_value' => $id,
    '#description' => t("The brand of this card lot."),
    '#maxlength' => 30,
    '#required' => true,
    );

    $form['paid'] = array(
    '#type' => 'textfield',
    '#title' => t("Value"),
    '#default_value' => $voippayment->paid,
    '#required' => true,
    );

    $form['ref'] = array(
    '#type' => 'textfield',
    '#title' => t("Ref"),
    '#default_value' => $voippayment->ref,
    '#required' => true,
    );


    $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    );


    return $form;
}

/**
 * Add/Edit bookmark form submit
 */
function vpayment_form_submit($form, &$form_state) {
      $udetail->name=$form_state['values'][username];
      $udetail = vsystem_sync_user($udetail);
        if ($udetail->notvalid) {
            drupal_set_message("User/Number  '".$form_state['values'][username]."' Not found.");
            return drupal_goto('payment');
        }
	global    $memcache;
        $get_result = $memcache->get('user:'.$udetail->name);
        $obj = json_decode($get_result);
	if ($obj){
            $tuser->balance = $obj->balance/100;
            $tuser->currency = $obj->currency;
            $tuser->vuid = $obj->vuid;
        }
                                                        
        db_query("INSERT into voippayment(accountid,name,ref,paid) Values(%d,'%s','%s',%d)", $udetail->vuid, $form_state['values']['username'],$form_state['values']['ref'], $form_state['values']['paid']*100);
        watchdog('user', "Pay Back '".$form_state['values'][paid]."' to Account '".$form_state['values'][username]."' By $user->name");
        drupal_set_message("Pay Back '".$form_state['values'][paid]."' to Account '".$form_state['values'][username]."' Done.");
    drupal_goto('payment/list');
}

